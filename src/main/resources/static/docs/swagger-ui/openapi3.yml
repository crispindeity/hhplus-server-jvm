openapi: 3.0.1
info:
  title: concert reservation server
  description: API Documents
  version: 1.0.0
servers:
- url: http://localhost:8080
tags: []
paths:
  /api/reservations:
    post:
      tags:
      - 예약
      summary: 예약 생성 요청 API
      description: 좌석을 예약할 때 사용되는 API 입니다.
      operationId: 예약 생성
      parameters:
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api-reservations-2110669849"
            examples:
              예약 생성 - 잘못된 요청:
                value: |-
                  {
                    "date" : "2025-07-18",
                    "time" : "16:01:18.088368",
                    "seat" : -1
                  }
              예약 생성:
                value: |-
                  {
                    "date" : "2025-07-18",
                    "time" : "16:01:18.001004",
                    "seat" : 1
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                예약 생성 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations1943643336"
              examples:
                예약 생성:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : {
                        "id" : 1,
                        "userId" : 1,
                        "concertId" : 1,
                        "reservedAt" : "2025-07-17T16:01:18.004151",
                        "expiresAt" : "2025-07-17T16:06:18.004158"
                      }
                    }
  /api/queue/entry-token:
    post:
      tags:
      - 대기열 토큰
      summary: 대기열 토큰 발급 API
      description: 대기열 토큰 발급 시 사용되는 API
      operationId: 대기열 토큰
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api-queue-entry-token-200765834"
            examples:
              대기열 토큰:
                value: |-
                  {
                    "userId" : "b3e1f8a4-cfe5-4260-9db3-59d158b6d11e"
                  }
              대기열 토큰 - 잘못된 요청:
                value: |-
                  {
                    "userId" : ""
                  }
      responses:
        "200":
          description: "200"
          headers:
            EntryQueueToken:
              description: 대기열 토큰 값
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                대기열 토큰:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success"
                    }
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-queue-entry-token-859874659"
              examples:
                대기열 토큰 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
  /api/reservations/available-dates:
    get:
      tags:
      - 예약
      summary: 예약 가능 날짜 조회 API
      description: 예약 가능 날짜를 조회할 때 사용하는 API
      operationId: 예약 가능 날짜 조회
      parameters:
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api-reservations-available-dates578281312"
            examples:
              예약 가능 날짜 조회:
                value: |-
                  {
                    "concertId" : 1
                  }
              예약 가능 날짜 조회 - 잘못된 요청:
                value: |-
                  {
                    "concertId" : -1
                  }
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-dates2111023121"
              examples:
                예약 가능 날짜 조회:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : {
                        "dates" : [ "2025-07-18", "2025-07-19", "2025-07-20" ]
                      }
                    }
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                예약 가능 날짜 조회 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
  /api/reservations/available-seats:
    get:
      tags:
      - 예약
      summary: 예약 가능 좌석 조회 요청 실패
      description: 현재 날짜 이전 날짜로 예약 가능 좌석 조회 시 예외 발생
      operationId: 예약 가능 좌석 조회
      parameters:
      - name: date
        in: query
        description: 좌석 조회 날짜
        required: true
        schema:
          type: string
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                예약 가능 좌석 조회 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats-1415072009"
              examples:
                예약 가능 좌석 조회:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : {
                        "seats" : [ {
                          "id" : 1,
                          "number" : 1,
                          "price" : 1000
                        }, {
                          "id" : 2,
                          "number" : 2,
                          "price" : 2000
                        }, {
                          "id" : 3,
                          "number" : 3,
                          "price" : 3000
                        } ]
                      }
                    }
  /api/users/{id}/points:
    get:
      tags:
      - 유저 포인트
      summary: 유저 포인트 조회 API
      description: 유저 포인트 조회 시 사용되는 API
      operationId: 유저 포인트 조회
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                유저 포인트 조회 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-users-id-points-695636323"
              examples:
                유저 포인트 조회:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : {
                        "userId" : 1,
                        "balance" : 1000
                      }
                    }
  /api/reservations/{id}/payment/points:
    post:
      tags:
      - 결제
      summary: 포인트 결제 요청 API
      description: 포인트 결제 시 사용되는 API
      operationId: 포인트 결제
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api-reservations-id-payment-points730362"
            examples:
              포인트 결제 - 잘못된 요청:
                value: |-
                  {
                    "price" : -1
                  }
              포인트 결제:
                value: |-
                  {
                    "price" : 1000
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                포인트 결제 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-id-payment-points-230409006"
              examples:
                포인트 결제:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : {
                        "userId" : 1,
                        "reservationId" : 1,
                        "price" : 1000,
                        "paidAt" : "2025-07-17T16:01:17.652054"
                      }
                    }
  /api/users/{id}/points/charge:
    post:
      tags:
      - 유저 포인트
      summary: 유저 포인트 충전 API
      description: 유저 포인트 충전 시 사용되는 API
      operationId: 유저 포인트 충전
      parameters:
      - name: id
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: EntryQueueToken
        in: header
        description: 대기열 토큰
        required: true
        schema:
          type: string
        example: token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api-users-id-points-charge-326542580"
            examples:
              유저 포인트 충전 - 잘못된 요청:
                value: |-
                  {
                    "amount" : -1
                  }
              유저 포인트 충전:
                value: |-
                  {
                    "amount" : 1000
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-reservations-available-seats623876813"
              examples:
                유저 포인트 충전 - 잘못된 요청:
                  value: |-
                    {
                      "code" : 400,
                      "message" : "bad request"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api-users-id-points-charge701277084"
              examples:
                유저 포인트 충전:
                  value: |-
                    {
                      "code" : 200,
                      "message" : "success",
                      "result" : 1
                    }
components:
  schemas:
    api-reservations-available-seats623876813:
      type: object
      properties:
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-reservations-available-dates2111023121:
      type: object
      properties:
        result:
          type: object
          properties:
            dates:
              type: array
              description: 예약 가능 날짜 리스트
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-queue-entry-token-859874659:
      type: object
      properties:
        code:
          type: number
          description: 에러 코드
        message:
          type: string
          description: 에러 메시지
    api-users-id-points-charge-326542580:
      type: object
      properties:
        amount:
          type: number
          description: 포인트 충전 금액
    api-reservations-available-seats-1415072009:
      type: object
      properties:
        result:
          type: object
          properties:
            seats:
              type: array
              description: 예약 가능 좌석 리스트
              items:
                type: object
                properties:
                  number:
                    type: number
                    description: 좌석 번호
                  price:
                    type: number
                    description: 좌석 가격
                  id:
                    type: number
                    description: 좌석 식별자
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-users-id-points-charge701277084:
      type: object
      properties:
        result:
          type: number
          description: 유저 식별자
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-reservations1943643336:
      type: object
      properties:
        result:
          type: object
          properties:
            concertId:
              type: number
              description: 콘서트 식별자
            id:
              type: number
              description: 예약 식별자
            reservedAt:
              type: string
              description: 예약 일자
            userId:
              type: number
              description: 유저 식별자
            expiresAt:
              type: string
              description: 예약 만료 일자
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-reservations-id-payment-points730362:
      type: object
      properties:
        price:
          type: number
          description: 가격
    api-users-id-points-695636323:
      type: object
      properties:
        result:
          type: object
          properties:
            balance:
              type: number
              description: 포인트 잔액
            userId:
              type: number
              description: 유저 식별자
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-reservations-2110669849:
      type: object
      properties:
        seat:
          type: number
          description: 좌석
        date:
          type: string
          description: 예약 일자
        time:
          type: string
          description: 예약 시간
    api-reservations-id-payment-points-230409006:
      type: object
      properties:
        result:
          type: object
          properties:
            reservationId:
              type: number
              description: 예약 식별자
            price:
              type: number
              description: 가격
            paidAt:
              type: string
              description: 결제 일자
            userId:
              type: number
              description: 유저 식별자
        code:
          type: number
          description: 응답 코드
        message:
          type: string
          description: 응답 메시지
    api-reservations-available-dates578281312:
      type: object
      properties:
        concertId:
          type: number
          description: 콘서트 식별 아이디
    api-queue-entry-token-200765834:
      type: object
      properties:
        userId:
          type: string
          description: 존재하지 않는 사용자 ID
